<?php

/**
 * Regression module
 *
 * @file
 *   Main module file.
 */

/**
 * @TODO:
 *   * convert Drupal html pages into text and save into entity
 *   * duplicates entities are ignored
 *   * entities are grouped by the menu callback and page arguments
 *   * send notications about the changes and post the one-time login link (to approve the changes)
 *   * user selects the following options:
 *     * Approve the change and set the page as default
 *     * Mark that change as dynamic (ignore it in the future)
 *     * Mark as regression
 *     * Mark as broken
 *   * description of approval or disapproval can be configured as required or not (fieldable entity)
 *   * description of approval or disapproval can contain
 *     * description
 *     * priority (minor, major, blocker)
 *     * module name (optional)
 *     * URL for bug tracker
 *     * assignee (responsible responsible)
 *   * create the view list with all regressions, blockers and broken pages
 *     * show the date, when last time it was working
 *   * configure e-mail content in admin panel
 *   * when content is marked as dynamic, find the right regex/pattern to ignore similar change in the future
 *   * dynamic page arguments can be configured as dynamic, so threated as the same page
 *   * add drush command to list all regressions, blockers and broken pages (one per line, return empty content if none)
 *
 */

/**
 * Include for the Regression feature.
 */
// include_once 'regression.features.inc';

/**
 * Implements hook_init().
 */
function regression_init() {
  $path = drupal_get_path('module', 'regression');
}

/**
 * Implements hook_menu().
 */
function regression_menu() {
  $items = array();

  /*
  // Settings form.
  $items['admin/config/regression'] =
  $items['admin/config/regression/settings'] = array(
    'title' => 'regression',
    'description' => 'regression configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('regression_settings'),
    'file' => 'includes/regression.admin.inc',
    'access arguments' => array('regression administration'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -20,
  );
  
  $items['admin/config/regression/settings/regression'] = array(
    'title' => 'regression',
    'access arguments' => array('regression administration'),
    'file' => 'includes/regression.admin.inc',
    'access arguments' => array('regression administration'),
    'weight' => -20,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  */

  return $items;
}

/**
 * Implements hook_help().
 */
function regression_help($path, $args) {
  if ($path == 'admin/help#regression') {
    $out = '<p>' . t('Regression module help.') . '</p>';
    return $out;
  }
}

/**
 * Implements hook_permission().
 */
function regression_permission() {
  return array(
    'regression administration' => array(
      'title' => t('Administer Regression module'),
      'description' => t('Perform administration tasks for Regression module.'),
    ),
  );
}

/**
 * Implements hook_flush_caches().
 */
function regression_flush_caches() {
  return array('cache_regression');
}

/**
 * Implements hook_exit().
 */
function regression_exit() {
  $html = ob_get_contents();
  // $text = html2txt_convert($html);
  // @TODO:
  //  * save text into new entity (revisioned)
  //  * if entity content (text) is already saved, do not add (just update the update date),
  //  * if entity content (text) is already saved in different revision, set as default
}

